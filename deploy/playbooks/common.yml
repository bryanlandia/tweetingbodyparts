---

# install:
# git pull the app
# make virtualenv
# pip install dependencies

# deploy:
# git pull the app
# pip install dependencies
# tell supervisor to restart app

- hosts: all
  sudo: True
  vars_files:
    - ../vars/common_vars.yml
  tasks:
    - name: Install required system packages.
      apt: pkg={{ item }} state=installed install_recommends=yes update-cache=yes
      with_items:
        - python-dev
        - gcc
        - python-setuptools
        - git-core
        - redis-server
        - libgdal1-dev
      tags:
        - install
      notify: 
        - reload redis

    # - name: install gdal 1.11.5 from source
    #   script: ../scripts/gdal_install.sh creates=/usr/bin/gdal-1.11.5
    #   tags:
    #     - install


    - name: install pip
      action: easy_install name=pip
      tags:
        - install

    - name: create webapps group
      group: name="{{ common_webapps_group }}" state=present
      tags:
        - install

    - name: create webapps user
      user:    
        name: "{{ common_webapps_user }}"
        # need a home dir for pip cache
        createhome: yes
        shell: /bin/bash
        group: "{{ common_webapps_group }}"
        state: present
      tags:
        - install
    
    - name: create our app directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{common_webapps_user}}"
        group: "{{common_webapps_group}}"
        mode: 0755
      with_items:
        - "{{webapps_dir}}"
        - "{{apps_envs_dir}}"
        - "{{app_dir}}"
      tags:
        - install  
    
    - name: set up our app's virtualenv
      command: virtualenv {{apps_envs_dir}}/{{app_env_name}} -p python2.7 creates="{{apps_envs_dir}}/{{app_env_name}}"
      become: true
      become_user: "{{common_webapps_user}}"
      tags:
        - install

    # this may not be needed now but originally I didn't create the virtualenv
    # as the webapps user
    - name: webapps user:group own app virtualenv
      command: chown -R {{common_webapps_user}}:{{common_webapps_group}} {{apps_envs_dir}}/{{app_env_name}} 
      tags:
        - install

    - name: git pull project
      git: repo={{repo_url}} dest={{webapps_dir}}/{{app_name}} version=master      
      tags:
          - install
          - deploy
      become: true
      become_user: "{{ common_webapps_user }}"        

    - name: install pip requirements for app and restart app processes
      pip: 
        requirements: "{{webapps_dir}}/{{app_name}}/requirements/{{app_deploy_type}}.txt"
        executable: "{{apps_envs_dir}}/{{app_env_name}}/bin/pip"
        chdir: "{{app_dir}}"  # necessary for local package install from requirements 
      notify:
        - reload redis
        - restart celery worker_development
        - restart celery worker_production
        - restart celery beat_development
        - restart celery beat_production
        - restart flask server_development
        - restart flask server_production
      tags:
          - install
          - deploy
      become: true
      become_user: "{{ common_webapps_user }}"

  handlers:
    - include: handlers.yml
